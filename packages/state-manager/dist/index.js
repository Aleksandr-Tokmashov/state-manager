var t={d:(e,s)=>{for(var r in s)t.o(s,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:s[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{i:()=>s});class s{state;listeners=new Set;constructor(t){this.state=t}getState(){return this.state}updateState(t){this.state=t(this.state),this.notifyListeners()}subscribe(t){return this.listeners.add(t),()=>this.unsubscribe(t)}unsubscribe(t){this.listeners.delete(t)}notifyListeners(){this.listeners.forEach((t=>t(this.state)))}}const r=e.i;export{r as Store};